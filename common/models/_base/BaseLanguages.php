<?php

/**
 * This is the model base class for the table "languages".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Languages".
 *
 * Columns in table "languages" available as properties of the model,
 * followed by relations of table "languages" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $text
 * @property string $img
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property DaysTranslate[] $daysTranslates
 * @property EventsTranslate[] $eventsTranslates
 * @property User $updatedBy
 * @property User $createdBy
 * @property MenusTranslate[] $menusTranslates
 * @property PostsTranslate[] $postsTranslates
 * @property ReadingsTranslate[] $readingsTranslates
 */

Yii::import('common.models._base.MainModel');
abstract class BaseLanguages extends MainModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'languages';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Languages|Languages', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, text', 'required'),
			array('created_by, updated_by, created_at, updated_at', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>3),
			array('text', 'length', 'max'=>100),
			array('img', 'length', 'max'=>256),
			array('img, created_by, updated_by, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, text, img, created_by, updated_by, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'daysTranslates' => array(self::HAS_MANY, 'DaysTranslate', 'lng_id'),
			'eventsTranslates' => array(self::HAS_MANY, 'EventsTranslate', 'lng_id'),
			'updatedBy' => array(self::BELONGS_TO, 'User', 'updated_by'),
			'createdBy' => array(self::BELONGS_TO, 'User', 'created_by'),
			'menusTranslates' => array(self::HAS_MANY, 'MenusTranslate', 'lng_id'),
			'postsTranslates' => array(self::HAS_MANY, 'PostsTranslate', 'lng_id'),
			'readingsTranslates' => array(self::HAS_MANY, 'ReadingsTranslate', 'lng_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'text' => Yii::t('app', 'Text'),
			'img' => Yii::t('app', 'Img'),
			'created_by' => null,
			'updated_by' => null,
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'daysTranslates' => null,
			'eventsTranslates' => null,
			'updatedBy' => null,
			'createdBy' => null,
			'menusTranslates' => null,
			'postsTranslates' => null,
			'readingsTranslates' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('img', $this->img, true);
		$criteria->compare('created_by', $this->created_by);
		$criteria->compare('updated_by', $this->updated_by);
		$criteria->compare('created_at', $this->created_at);
		$criteria->compare('updated_at', $this->updated_at);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}